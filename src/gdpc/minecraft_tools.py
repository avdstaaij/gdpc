"""Provides various Minecraft-related utilities that do not require an :class:`.Editor`."""
import json
import re
from functools import lru_cache
from typing import Optional, Union, List, Dict

from deprecated import deprecated

from .block import Block
from .vector_tools import Vec2iLike, Rect

# ==================================================================================================
# Constants
# ==================================================================================================


# Known widths of characters in pixels of Minecraft's font (https://minecraft.wiki/w/Language#Font)
# the widest supported Unicode character is 10 wide
# Adapted from https://github.com/TheWilley/Text2Book/blob/7dc3b60c4050143edc99ac5e1012f51e6431ae9b/src/data/glyphs.json
_CHARACTER_WIDTHS: Dict[str, int] = {
    " ": 3,
    "!": 1,
    "\"": 3,
    "#": 5,
    "$": 5,
    "%": 5,
    "&": 5,
    "'": 1,
    "(": 3,
    ")": 3,
    "*": 3,
    "+": 5,
    ",": 1,
    "-": 5,
    ".": 1,
    "/": 5,
    "0": 5,
    "1": 5,
    "2": 5,
    "3": 5,
    "4": 5,
    "5": 5,
    "6": 5,
    "7": 5,
    "8": 5,
    "9": 5,
    ":": 1,
    ";": 1,
    "<": 4,
    "=": 5,
    ">": 4,
    "?": 5,
    "@": 6,
    "A": 5,
    "B": 5,
    "C": 5,
    "D": 5,
    "E": 5,
    "F": 5,
    "G": 5,
    "H": 5,
    "I": 3,
    "J": 5,
    "K": 5,
    "L": 5,
    "M": 5,
    "N": 5,
    "O": 5,
    "P": 5,
    "Q": 5,
    "R": 5,
    "S": 5,
    "T": 5,
    "U": 5,
    "V": 5,
    "W": 5,
    "X": 5,
    "Y": 5,
    "Z": 5,
    "[": 3,
    "\\": 5,
    "]": 3,
    "^": 5,
    "_": 5,
    "`": 2,
    "a": 5,
    "b": 5,
    "c": 5,
    "d": 5,
    "e": 5,
    "f": 4,
    "g": 5,
    "h": 5,
    "i": 1,
    "j": 5,
    "k": 4,
    "l": 2,
    "m": 5,
    "n": 5,
    "o": 5,
    "p": 5,
    "q": 5,
    "r": 5,
    "s": 5,
    "t": 3,
    "u": 5,
    "v": 5,
    "w": 5,
    "x": 5,
    "y": 5,
    "z": 5,
    "{": 3,
    "|": 1,
    "}": 3,
    "~": 6,
    "£": 5,
    "ƒ": 5,
    "ª": 4,
    "º": 4,
    "¬": 5,
    "«": 6,
    "»": 6,
    "░": 7,
    "▒": 8,
    "▓": 8,
    "│": 5,
    "┤": 5,
    "╡": 5,
    "╢": 7,
    "╖": 7,
    "╕": 5,
    "╣": 7,
    "║": 7,
    "╗": 7,
    "╝": 7,
    "╜": 7,
    "╛": 5,
    "┐": 5,
    "└": 8,
    "┴": 8,
    "┬": 8,
    "├": 8,
    "─": 8,
    "┼": 8,
    "╞": 8,
    "╟": 8,
    "╚": 8,
    "╔": 8,
    "╩": 8,
    "╦": 8,
    "╠": 8,
    "═": 8,
    "╬": 8,
    "╧": 8,
    "╨": 8,
    "╤": 8,
    "╥": 8,
    "╙": 8,
    "╘": 8,
    "╒": 8,
    "╓": 8,
    "╫": 8,
    "╪": 8,
    "┘": 5,
    "┌": 8,
    "█": 8,
    "▄": 8,
    "▌": 4,
    "▐": 8,
    "▀": 8,
    "∅": 7,
    "∈": 5,
    "≡": 6,
    "±": 5,
    "≥": 5,
    "≤": 5,
    "⌠": 7,
    "⌡": 4,
    "÷": 5,
    "≈": 6,
    "°": 4,
    "∙": 5,
    "√": 6,
    "ⁿ": 4,
    "²": 4,
    "■": 5,
    "À": 5,
    "Á": 5,
    "Â": 5,
    "Ã": 5,
    "Ä": 5,
    "Å": 5,
    "Æ": 9,
    "Ç": 5,
    "È": 5,
    "É": 5,
    "Ê": 5,
    "Ë": 5,
    "Ì": 3,
    "Í": 3,
    "Î": 3,
    "Ï": 3,
    "Ð": 6,
    "Ñ": 5,
    "Ò": 5,
    "Ó": 5,
    "Ô": 5,
    "Õ": 5,
    "Ö": 5,
    "Ù": 5,
    "Ú": 5,
    "Û": 5,
    "Ü": 5,
    "Ý": 5,
    "à": 5,
    "á": 5,
    "â": 5,
    "ã": 5,
    "ä": 5,
    "å": 5,
    "æ": 9,
    "ç": 5,
    "ì": 2,
    "í": 2,
    "î": 3,
    "ï": 3,
    "ñ": 5,
    "ò": 5,
    "ó": 5,
    "ô": 5,
    "õ": 5,
    "ö": 5,
    "ù": 5,
    "ú": 5,
    "û": 5,
    "ü": 5,
    "ý": 5,
    "ÿ": 5,
    "Ā": 5,
    "ā": 5,
    "Ă": 5,
    "ă": 5,
    "Ą": 5,
    "ą": 5,
    "Ć": 5,
    "ć": 5,
    "Ĉ": 5,
    "ĉ": 5,
    "Ċ": 5,
    "ċ": 5,
    "Č": 5,
    "č": 5,
    "Ď": 5,
    "ď": 7,
    "Đ": 6,
    "đ": 6,
    "Ē": 5,
    "ē": 5,
    "Ĕ": 5,
    "ĕ": 5,
    "Ė": 5,
    "ė": 5,
    "Ę": 5,
    "ę": 5,
    "Ě": 5,
    "ě": 5,
    "Ĝ": 5,
    "ĝ": 5,
    "Ḡ": 5,
    "ḡ": 5,
    "Ğ": 5,
    "ğ": 5,
    "Ġ": 5,
    "ġ": 5,
    "Ģ": 5,
    "ģ": 5,
    "Ĥ": 5,
    "ĥ": 5,
    "Ħ": 7,
    "ħ": 6,
    "Ĩ": 4,
    "ĩ": 4,
    "Ī": 3,
    "ī": 3,
    "Ĭ": 4,
    "ĭ": 4,
    "Į": 3,
    "į": 2,
    "İ": 3,
    "ı": 1,
    "Ĵ": 5,
    "ĵ": 5,
    "Ķ": 5,
    "ķ": 4,
    "Ĺ": 5,
    "ĺ": 2,
    "Ļ": 5,
    "ļ": 2,
    "Ľ": 5,
    "ľ": 3,
    "Ŀ": 5,
    "ŀ": 3,
    "Ł": 6,
    "ł": 4,
    "Ń": 5,
    "ń": 5,
    "Ņ": 5,
    "ņ": 5,
    "Ň": 5,
    "ň": 5,
    "Ŋ": 5,
    "ŋ": 5,
    "Ō": 5,
    "ō": 5,
    "Ŏ": 5,
    "ŏ": 5,
    "Ő": 5,
    "ő": 5,
    "Œ": 9,
    "œ": 9,
    "Ŕ": 5,
    "ŕ": 5,
    "Ŗ": 5,
    "ŗ": 5,
    "Ř": 5,
    "ř": 5,
    "Ś": 5,
    "ś": 5,
    "Ŝ": 5,
    "ŝ": 5,
    "Ş": 5,
    "ş": 5,
    "Š": 5,
    "š": 5,
    "Ţ": 5,
    "ţ": 3,
    "Ť": 5,
    "ť": 4,
    "Ŧ": 5,
    "ŧ": 3,
    "Ũ": 5,
    "ũ": 5,
    "Ū": 5,
    "ū": 5,
    "Ŭ": 5,
    "ŭ": 5,
    "Ů": 5,
    "ů": 5,
    "Ű": 5,
    "ű": 5,
    "Ų": 5,
    "ų": 5,
    "Ŵ": 5,
    "ŵ": 5,
    "Ŷ": 5,
    "ŷ": 5,
    "Ÿ": 5,
    "Ź": 5,
    "ź": 5,
    "Ż": 5,
    "ż": 5,
    "Ž": 5,
    "ž": 5,
    "Ǽ": 9,
    "ǽ": 9,
    "Ǿ": 5,
    "ǿ": 5,
    "Ș": 5,
    "ș": 5,
    "Ț": 5,
    "ț": 3,
    "Ά": 7,
    "Έ": 7,
    "Ή": 7,
    "Ί": 5,
    "Ό": 7,
    "Ύ": 7,
    "Ώ": 7,
    "ΐ": 5,
    "Ϊ": 3,
    "Ϋ": 5,
    "ά": 5,
    "έ": 5,
    "ή": 5,
    "ί": 2,
    "ΰ": 5,
    "ϊ": 3,
    "ϋ": 5,
    "ό": 5,
    "ύ": 5,
    "ώ": 7,
    "Ѐ": 5,
    "Ё": 5,
    "Ѓ": 5,
    "Ї": 3,
    "Ќ": 5,
    "Ѝ": 5,
    "Ў": 5,
    "Й": 5,
    "й": 5,
    "ѐ": 5,
    "ё": 5,
    "ђ": 6,
    "ѓ": 4,
    "ї": 3,
    "ћ": 6,
    "ќ": 4,
    "ѝ": 5,
    "ў": 5,
    "џ": 5,
    "Ґ": 5,
    "ґ": 5,
    "Ḃ": 5,
    "ḃ": 5,
    "Ḋ": 5,
    "ḋ": 5,
    "Ḟ": 5,
    "ḟ": 4,
    "Ḣ": 5,
    "ḣ": 5,
    "Ḱ": 5,
    "ḱ": 4,
    "Ṁ": 5,
    "ṁ": 5,
    "Ṗ": 5,
    "ṗ": 5,
    "Ṡ": 5,
    "ṡ": 5,
    "Ṫ": 5,
    "ṫ": 3,
    "Ẁ": 5,
    "ẁ": 5,
    "Ẃ": 5,
    "ẃ": 5,
    "Ẅ": 5,
    "ẅ": 5,
    "Ỳ": 5,
    "ỳ": 5,
    "è": 5,
    "é": 5,
    "ê": 5,
    "ë": 5,
    "ŉ": 7,
    "ǧ": 5,
    "ǫ": 5,
    "Џ": 5,
    "ḍ": 5,
    "ḥ": 5,
    "ṛ": 5,
    "ṭ": 3,
    "Ẓ": 5,
    "Ị": 3,
    "ị": 1,
    "Ọ": 5,
    "ọ": 5,
    "Ụ": 5,
    "ụ": 5,
    "№": 9,
    "ȇ": 5,
    "Ɣ": 5,
    "ɣ": 5,
    "ʃ": 5,
    "⁇": 9,
    "Ǳ": 9,
    "ǲ": 9,
    "ǳ": 9,
    "Ǆ": 9,
    "ǅ": 9,
    "ǆ": 9,
    "Ǉ": 9,
    "ǈ": 9,
    "Ǌ": 9,
    "ǋ": 9,
    "ǌ": 9,
    "ℹ": 9,
    "ᵫ": 9,
    "Ꜳ": 9,
    "ꜳ": 9,
    "Ꜵ": 9,
    "ꜵ": 9,
    "Ꜷ": 9,
    "ꜷ": 9,
    "Ꜹ": 9,
    "Ꜻ": 9,
    "Ꜽ": 9,
    "ꜽ": 8,
    "Ꝏ": 9,
    "ꝏ": 9,
    "Ꝡ": 5,
    "ꝡ": 5,
    "ﬄ": 9,
    "ﬆ": 9,
    "ᚡ": 4,
    "ᚵ": 4,
    "Ơ": 7,
    "ơ": 7,
    "Ư": 7,
    "ư": 7,
    "Ắ": 5,
    "ắ": 5,
    "Ấ": 5,
    "ấ": 5,
    "Ế": 5,
    "ế": 5,
    "ố": 5,
    "Ớ": 7,
    "ớ": 7,
    "Ứ": 7,
    "ứ": 7,
    "Ằ": 5,
    "ằ": 5,
    "Ầ": 5,
    "ầ": 5,
    "Ề": 5,
    "ề": 5,
    "ồ": 5,
    "Ờ": 7,
    "ờ": 7,
    "Ừ": 7,
    "ừ": 7,
    "Ả": 5,
    "ả": 5,
    "Ẳ": 5,
    "ẳ": 5,
    "Ẩ": 5,
    "ẩ": 5,
    "Ẻ": 5,
    "ẻ": 5,
    "ổ": 5,
    "Ở": 7,
    "Ể": 5,
    "ể": 5,
    "Ỉ": 3,
    "ỉ": 3,
    "Ỏ": 5,
    "ỏ": 5,
    "Ổ": 5,
    "ở": 7,
    "Ủ": 5,
    "ủ": 5,
    "Ử": 7,
    "ử": 7,
    "Ỷ": 5,
    "ỷ": 5,
    "Ạ": 5,
    "ạ": 5,
    "Ặ": 5,
    "ặ": 5,
    "Ậ": 5,
    "ậ": 5,
    "Ẹ": 5,
    "ẹ": 5,
    "Ệ": 5,
    "ệ": 5,
    "Ộ": 5,
    "ộ": 5,
    "Ợ": 7,
    "ợ": 7,
    "Ự": 7,
    "ự": 7,
    "Ỵ": 5,
    "ỵ": 5,
    "Ố": 5,
    "ƕ": 8,
    "Ẫ": 5,
    "ẫ": 5,
    "Ỗ": 5,
    "ỗ": 5,
    "ữ": 7,
    "☞": 9,
    "☜": 9,
    "☮": 9,
    "Ẵ": 5,
    "ẵ": 5,
    "Ẽ": 5,
    "ẽ": 5,
    "Ễ": 5,
    "ễ": 5,
    "Ồ": 5,
    "Ỡ": 7,
    "ỡ": 7,
    "Ữ": 7,
    "Ỹ": 5,
    "ỹ": 5,
    "Ҙ": 5,
    "ҙ": 5,
    "Ҡ": 6,
    "ҡ": 5,
    "Ҫ": 5,
    "ҫ": 5,
    "Ƕ": 8,
    "⚠": 9,
    "⓪": 9,
    "①": 9,
    "②": 9,
    "③": 9,
    "④": 9,
    "⑤": 9,
    "⑥": 9,
    "⑦": 9,
    "⑧": 9,
    "⑨": 9,
    "⑩": 9,
    "⑪": 9,
    "⑫": 9,
    "⑬": 9,
    "⑭": 9,
    "⑮": 9,
    "⑯": 9,
    "⑰": 9,
    "⑱": 9,
    "⑲": 9,
    "⑳": 9,
    "Ⓐ": 9,
    "Ⓑ": 9,
    "Ⓒ": 9,
    "Ⓓ": 9,
    "Ⓔ": 9,
    "Ⓕ": 9,
    "Ⓖ": 9,
    "Ⓗ": 9,
    "Ⓘ": 9,
    "Ⓙ": 9,
    "Ⓚ": 9,
    "Ⓛ": 9,
    "Ⓜ": 9,
    "Ⓝ": 9,
    "Ⓞ": 9,
    "Ⓟ": 9,
    "Ⓠ": 9,
    "Ⓡ": 9,
    "Ⓢ": 9,
    "Ⓣ": 9,
    "Ⓤ": 9,
    "Ⓥ": 9,
    "Ⓦ": 9,
    "Ⓧ": 9,
    "Ⓨ": 9,
    "Ⓩ": 9,
    "ⓐ": 9,
    "ⓑ": 9,
    "ⓒ": 9,
    "ⓓ": 9,
    "ⓔ": 9,
    "ⓕ": 9,
    "ⓖ": 9,
    "ⓗ": 9,
    "ⓘ": 9,
    "ⓙ": 9,
    "ⓚ": 9,
    "ⓛ": 9,
    "ⓜ": 9,
    "ⓝ": 9,
    "ⓞ": 9,
    "ⓟ": 9,
    "ⓠ": 9,
    "ⓡ": 9,
    "ⓢ": 9,
    "ⓣ": 9,
    "ⓤ": 9,
    "ⓥ": 9,
    "ⓦ": 9,
    "ⓧ": 9,
    "ⓨ": 9,
    "ⓩ": 9,
    "̧": 2,
    "ʂ": 5,
    "ʐ": 6,
    "ɶ": 9,
    "Ǎ": 5,
    "ǎ": 5,
    "Ǟ": 5,
    "ǟ": 5,
    "Ǻ": 5,
    "ǻ": 5,
    "Ȃ": 5,
    "ȃ": 5,
    "Ȧ": 5,
    "ȧ": 5,
    "Ǡ": 5,
    "ǡ": 5,
    "Ḁ": 5,
    "ḁ": 5,
    "Ȁ": 5,
    "ȁ": 5,
    "Ḇ": 5,
    "ḇ": 5,
    "Ḅ": 5,
    "ḅ": 5,
    "ᵬ": 7,
    "Ḉ": 5,
    "ḉ": 5,
    "Ḑ": 5,
    "ḑ": 5,
    "Ḓ": 5,
    "ḓ": 5,
    "Ḏ": 5,
    "ḏ": 5,
    "Ḍ": 5,
    "ᵭ": 7,
    "Ḕ": 5,
    "ḕ": 5,
    "Ḗ": 5,
    "ḗ": 5,
    "Ḙ": 5,
    "ḙ": 5,
    "Ḝ": 5,
    "ḝ": 5,
    "Ȩ": 5,
    "ȩ": 5,
    "Ḛ": 5,
    "ḛ": 5,
    "Ȅ": 5,
    "ȅ": 5,
    "Ȇ": 5,
    "ᵮ": 5,
    "Ǵ": 5,
    "ǵ": 5,
    "Ǧ": 5,
    "Ḧ": 5,
    "ḧ": 5,
    "Ḩ": 5,
    "ḩ": 5,
    "Ḫ": 5,
    "ḫ": 5,
    "Ȟ": 5,
    "ȟ": 5,
    "Ḥ": 5,
    "ẖ": 5,
    "Ḯ": 3,
    "ḯ": 3,
    "Ȋ": 4,
    "ȋ": 4,
    "Ǐ": 3,
    "ǐ": 3,
    "Ȉ": 5,
    "ȉ": 5,
    "Ḭ": 4,
    "ḭ": 4,
    "ǰ": 5,
    "ȷ": 5,
    "Ǩ": 5,
    "ǩ": 4,
    "Ḳ": 5,
    "ḳ": 4,
    "Ḵ": 5,
    "ḵ": 4,
    "Ḻ": 5,
    "ḻ": 3,
    "Ḽ": 5,
    "ḽ": 3,
    "Ḷ": 5,
    "ḷ": 2,
    "Ḹ": 5,
    "ḹ": 3,
    "Ɫ": 7,
    "Ḿ": 5,
    "ḿ": 5,
    "Ṃ": 5,
    "ṃ": 5,
    "ᵯ": 7,
    "Ṅ": 5,
    "ṅ": 5,
    "Ṇ": 5,
    "ṇ": 5,
    "Ṋ": 5,
    "ṋ": 5,
    "Ǹ": 5,
    "ǹ": 5,
    "Ṉ": 5,
    "ṉ": 5,
    "ᵰ": 7,
    "Ǭ": 5,
    "ǭ": 5,
    "Ȭ": 5,
    "ȭ": 5,
    "Ṍ": 5,
    "ṍ": 5,
    "Ṏ": 5,
    "ṏ": 5,
    "Ṑ": 5,
    "ṑ": 5,
    "Ṓ": 5,
    "ṓ": 5,
    "Ȏ": 5,
    "ȏ": 5,
    "Ȫ": 5,
    "ȫ": 5,
    "Ǒ": 5,
    "ǒ": 5,
    "Ȯ": 5,
    "ȯ": 5,
    "Ȱ": 5,
    "ȱ": 5,
    "Ȍ": 5,
    "ȍ": 5,
    "Ǫ": 5,
    "Ṕ": 5,
    "ṕ": 5,
    "ᵱ": 7,
    "Ȓ": 5,
    "ȓ": 5,
    "Ṙ": 5,
    "ṙ": 5,
    "Ṝ": 5,
    "ṝ": 5,
    "Ṟ": 5,
    "ṟ": 5,
    "Ȑ": 5,
    "ȑ": 5,
    "Ṛ": 5,
    "ᵳ": 7,
    "ᵲ": 7,
    "Ṥ": 5,
    "ṥ": 5,
    "Ṧ": 5,
    "ṧ": 5,
    "Ṣ": 5,
    "ṣ": 5,
    "Ṩ": 5,
    "ṩ": 5,
    "ᵴ": 7,
    "Ṱ": 5,
    "ṱ": 3,
    "Ṯ": 5,
    "ṯ": 3,
    "Ṭ": 5,
    "ẗ": 3,
    "ᵵ": 5,
    "Ṳ": 5,
    "ṳ": 5,
    "Ṷ": 5,
    "ṷ": 5,
    "Ṹ": 5,
    "ṹ": 5,
    "Ṻ": 5,
    "ṻ": 5,
    "Ǔ": 5,
    "ǔ": 5,
    "Ǖ": 5,
    "ǖ": 5,
    "Ǘ": 5,
    "ǘ": 5,
    "Ǚ": 5,
    "ǚ": 5,
    "Ǜ": 5,
    "ǜ": 5,
    "Ṵ": 5,
    "ṵ": 5,
    "Ȕ": 5,
    "ȕ": 5,
    "Ȗ": 5,
    "Ṿ": 5,
    "ṿ": 5,
    "Ṽ": 5,
    "ṽ": 5,
    "Ẇ": 5,
    "ẇ": 5,
    "Ẉ": 5,
    "ẉ": 5,
    "ẘ": 5,
    "Ẍ": 5,
    "ẍ": 5,
    "Ẋ": 5,
    "ẋ": 5,
    "Ȳ": 5,
    "ȳ": 5,
    "Ẏ": 5,
    "ẏ": 5,
    "ẙ": 5,
    "Ẕ": 5,
    "ẕ": 5,
    "Ẑ": 5,
    "ẑ": 5,
    "ẓ": 5,
    "ᵶ": 5,
    "Ǯ": 5,
    "ǯ": 5,
    "ẛ": 3,
    "Ꜿ": 5,
    "ꜿ": 5,
    "Ǣ": 9,
    "ǣ": 9,
    "ᵺ": 8,
    "ỻ": 6,
    "ᴂ": 9,
    "ᴔ": 9,
    "ꭣ": 9,
    "ȸ": 9,
    "ʣ": 9,
    "ʥ": 9,
    "ʤ": 9,
    "ʩ": 9,
    "ʪ": 7,
    "ʫ": 7,
    "ȹ": 9,
    "ʨ": 8,
    "ʦ": 8,
    "ʧ": 7,
    "ꭐ": 5,
    "ꭑ": 5,
    "₧": 9,
    "Ỻ": 7,
    "אַ": 5,
    "אָ": 5,
    "ƀ": 6,
    "Ƃ": 5,
    "ƃ": 5,
    "Ƈ": 6,
    "ƈ": 6,
    "Ɗ": 7,
    "Ƌ": 5,
    "ƌ": 5,
    "Ɠ": 6,
    "Ǥ": 6,
    "ǥ": 6,
    "Ɨ": 3,
    "Ɩ": 3,
    "ɩ": 2,
    "Ƙ": 5,
    "ƙ": 4,
    "Ɲ": 6,
    "Ƥ": 7,
    "ƥ": 5,
    "ɽ": 5,
    "Ʀ": 5,
    "Ƭ": 6,
    "ƭ": 3,
    "ƫ": 3,
    "Ʈ": 5,
    "ȗ": 5,
    "Ʊ": 5,
    "Ɯ": 5,
    "Ƴ": 6,
    "ƴ": 7,
    "Ƶ": 5,
    "ƶ": 5,
    "Ƣ": 7,
    "ƣ": 7,
    "Ȣ": 5,
    "ȣ": 5,
    "ʭ": 5,
    "ʮ": 6,
    "ʯ": 7,
    "ﬔ": 9,
    "ﬕ": 9,
    "ﬗ": 9,
    "ﬖ": 9,
    "ﬓ": 9,
    "Ӑ": 5,
    "ӑ": 5,
    "Ӓ": 5,
    "ӓ": 5,
    "Ӷ": 5,
    "ӷ": 4,
    "Ҕ": 5,
    "ҕ": 4,
    "Ӗ": 5,
    "ӗ": 5,
    "Ҽ": 7,
    "ҽ": 7,
    "Ҿ": 7,
    "ҿ": 7,
    "Ӛ": 5,
    "ӛ": 5,
    "Ӝ": 7,
    "ӝ": 5,
    "Ӂ": 7,
    "ӂ": 5,
    "Ӟ": 5,
    "ӟ": 5,
    "Ӣ": 5,
    "ӣ": 5,
    "Ӥ": 5,
    "ӥ": 5,
    "Ӧ": 5,
    "ӧ": 5,
    "Ӫ": 5,
    "ӫ": 5,
    "Ӱ": 5,
    "ӱ": 5,
    "Ӯ": 5,
    "ӯ": 5,
    "Ӳ": 5,
    "ӳ": 5,
    "Ӵ": 5,
    "ӵ": 5,
    "Ӹ": 7,
    "ӹ": 6,
    "Ӭ": 5,
    "ӭ": 5,
    "Ѷ": 6,
    "ѷ": 6,
    "Ӕ": 9,
    "Ӻ": 6,
    "Ԃ": 8,
    "Ꚃ": 5,
    "Ꚁ": 6,
    "Ꚉ": 6,
    "Ԫ": 9,
    "Ԭ": 6,
    "Ꚅ": 9,
    "Ԅ": 7,
    "Ԑ": 5,
    "Ӡ": 5,
    "Ԇ": 6,
    "Ҋ": 6,
    "Ӄ": 5,
    "Ҟ": 6,
    "Ҝ": 5,
    "Ԟ": 5,
    "Ԛ": 5,
    "Ӆ": 6,
    "Ԯ": 6,
    "Ԓ": 5,
    "Ԡ": 8,
    "Ԉ": 8,
    "Ԕ": 8,
    "Ӎ": 6,
    "Ӊ": 6,
    "Ԩ": 6,
    "Ӈ": 5,
    "Ҥ": 6,
    "Ԣ": 8,
    "Ԋ": 8,
    "Ҩ": 6,
    "Ԥ": 6,
    "Ҧ": 8,
    "Ҏ": 5,
    "Ԗ": 8,
    "Ԍ": 5,
    "Ꚑ": 5,
    "Ҭ": 5,
    "Ꚋ": 6,
    "Ꚍ": 5,
    "Ԏ": 6,
    "Ҳ": 6,
    "Ӽ": 5,
    "Ӿ": 5,
    "Ԧ": 6,
    "Ꚕ": 5,
    "Ҵ": 7,
    "Ꚏ": 6,
    "Ҷ": 6,
    "Ӌ": 5,
    "Ҹ": 5,
    "Ꚓ": 6,
    "Ꚗ": 8,
    "Ꚇ": 5,
    "Ҍ": 6,
    "Ԙ": 9,
    "Ԝ": 5,
    "ӕ": 9,
    "ӻ": 5,
    "ԃ": 8,
    "ꚃ": 5,
    "ꚁ": 6,
    "ꚉ": 6,
    "ԫ": 9,
    "ԭ": 6,
    "ꚅ": 8,
    "ԅ": 7,
    "ԑ": 5,
    "ӡ": 5,
    "ԇ": 6,
    "ҋ": 6,
    "ӄ": 4,
    "ҟ": 5,
    "ҝ": 5,
    "ԟ": 5,
    "ԛ": 5,
    "ӆ": 6,
    "ԯ": 6,
    "ԓ": 5,
    "ԡ": 8,
    "ԉ": 8,
    "ԕ": 8,
    "ӎ": 6,
    "ӊ": 6,
    "ԩ": 6,
    "ӈ": 5,
    "ҥ": 6,
    "ԣ": 8,
    "ԋ": 8,
    "ҩ": 6,
    "ԥ": 6,
    "ҧ": 8,
    "ҏ": 5,
    "ԗ": 8,
    "ԍ": 5,
    "ꚑ": 5,
    "ҭ": 5,
    "ꚋ": 6,
    "ꚍ": 5,
    "ԏ": 6,
    "ҳ": 6,
    "ӽ": 5,
    "ӿ": 5,
    "ԧ": 6,
    "ꚕ": 5,
    "ҵ": 6,
    "ꚏ": 5,
    "ҷ": 6,
    "ӌ": 5,
    "ҹ": 5,
    "ꚓ": 6,
    "ꚗ": 6,
    "ꚇ": 5,
    "ҍ": 6,
    "ԙ": 9,
    "ԝ": 5,
    "Ἀ": 8,
    "ἀ": 5,
    "Ἁ": 8,
    "ἁ": 5,
    "Ἂ": 9,
    "ἂ": 5,
    "Ἃ": 9,
    "ἃ": 5,
    "Ἄ": 9,
    "ἄ": 5,
    "Ἅ": 9,
    "ἅ": 6,
    "Ἆ": 8,
    "ἆ": 5,
    "Ἇ": 8,
    "ἇ": 5,
    "Ὰ": 8,
    "ὰ": 5,
    "Ᾰ": 5,
    "ᾰ": 5,
    "Ᾱ": 5,
    "ᾱ": 5,
    "Ά": 8,
    "ά": 5,
    "ᾈ": 8,
    "ᾀ": 5,
    "ᾉ": 8,
    "ᾁ": 5,
    "ᾊ": 9,
    "ᾂ": 5,
    "ᾋ": 9,
    "ᾃ": 5,
    "ᾌ": 9,
    "ᾄ": 5,
    "ᾍ": 9,
    "ᾅ": 5,
    "ᾎ": 8,
    "ᾆ": 5,
    "ᾏ": 8,
    "ᾇ": 5,
    "ᾼ": 5,
    "ᾴ": 5,
    "ᾶ": 5,
    "ᾷ": 5,
    "ᾲ": 5,
    "ᾳ": 5,
    "Ἐ": 8,
    "ἐ": 5,
    "Ἑ": 8,
    "ἑ": 5,
    "Ἒ": 9,
    "ἒ": 5,
    "Ἓ": 9,
    "ἓ": 5,
    "Ἔ": 9,
    "ἔ": 5,
    "Ἕ": 9,
    "ἕ": 5,
    "Ὲ": 8,
    "Έ": 8,
    "ὲ": 5,
    "έ": 5,
    "Ἠ": 8,
    "ἠ": 5,
    "Ὴ": 8,
    "ὴ": 5,
    "Ἡ": 8,
    "ἡ": 5,
    "Ἢ": 9,
    "ἢ": 5,
    "Ἣ": 9,
    "ἣ": 5,
    "Ἤ": 9,
    "ἤ": 5,
    "Ἥ": 9,
    "ἥ": 5,
    "Ἦ": 8,
    "ἦ": 5,
    "Ἧ": 8,
    "ἧ": 5,
    "ᾘ": 8,
    "ᾐ": 5,
    "ᾙ": 8,
    "ᾑ": 5,
    "ᾚ": 9,
    "ᾒ": 5,
    "ᾛ": 9,
    "ᾓ": 5,
    "ᾜ": 9,
    "ᾔ": 5,
    "ᾝ": 9,
    "ᾕ": 5,
    "ᾞ": 8,
    "ᾖ": 5,
    "ᾟ": 8,
    "ᾗ": 5,
    "Ή": 8,
    "ή": 5,
    "ῌ": 5,
    "ῃ": 5,
    "ῂ": 5,
    "ῄ": 5,
    "ῆ": 5,
    "ῇ": 5,
    "Ὶ": 6,
    "ὶ": 3,
    "Ί": 6,
    "ί": 2,
    "Ἰ": 6,
    "ἰ": 3,
    "Ἱ": 9,
    "ἱ": 2,
    "Ἲ": 8,
    "ἲ": 5,
    "Ἳ": 7,
    "ἳ": 5,
    "Ἴ": 8,
    "ἴ": 5,
    "Ἵ": 7,
    "ἵ": 5,
    "Ἶ": 6,
    "ἶ": 4,
    "Ἷ": 6,
    "ἷ": 4,
    "Ῐ": 4,
    "ῐ": 4,
    "Ῑ": 3,
    "ῑ": 3,
    "ῒ": 3,
    "ΐ": 3,
    "ῖ": 4,
    "ῗ": 4,
    "Ὸ": 8,
    "ὸ": 5,
    "Ό": 8,
    "ό": 5,
    "Ὀ": 8,
    "ὀ": 5,
    "Ὁ": 8,
    "ὁ": 5,
    "Ὂ": 9,
    "ὂ": 5,
    "Ὃ": 9,
    "ὃ": 5,
    "Ὄ": 9,
    "ὄ": 5,
    "Ὅ": 9,
    "ὅ": 5,
    "Ῥ": 8,
    "ῤ": 5,
    "ῥ": 5,
    "Ὺ": 8,
    "ὺ": 5,
    "Ύ": 8,
    "ύ": 5,
    "Ὑ": 8,
    "ὑ": 5,
    "Ὓ": 9,
    "ὓ": 5,
    "Ὕ": 9,
    "ὕ": 5,
    "Ὗ": 8,
    "ὗ": 5,
    "Ῠ": 5,
    "ῠ": 5,
    "Ῡ": 5,
    "ῡ": 5,
    "ϓ": 9,
    "ϔ": 6,
    "ῢ": 5,
    "ΰ": 5,
    "ῧ": 5,
    "ὐ": 5,
    "ὒ": 5,
    "ὔ": 5,
    "ῦ": 5,
    "ὖ": 5,
    "Ὼ": 8,
    "ὼ": 7,
    "Ώ": 8,
    "ώ": 7,
    "Ὠ": 8,
    "ὠ": 7,
    "Ὡ": 8,
    "ὡ": 7,
    "Ὢ": 9,
    "ὢ": 7,
    "Ὣ": 9,
    "ὣ": 7,
    "Ὤ": 9,
    "ὤ": 7,
    "Ὥ": 9,
    "ὥ": 7,
    "Ὦ": 8,
    "ὦ": 7,
    "Ὧ": 9,
    "ὧ": 7,
    "ᾨ": 8,
    "ᾠ": 7,
    "ᾩ": 8,
    "ᾡ": 7,
    "ᾪ": 9,
    "ᾢ": 7,
    "ᾫ": 9,
    "ᾣ": 7,
    "ᾬ": 9,
    "ᾤ": 7,
    "ᾭ": 9,
    "ᾥ": 7,
    "ᾮ": 8,
    "ᾦ": 7,
    "ᾯ": 9,
    "ᾧ": 7,
    "ῼ": 5,
    "ῳ": 7,
    "ῲ": 7,
    "ῴ": 7,
    "ῶ": 7,
    "ῷ": 7,
    "☯": 9,
    "☐": 9,
    "☑": 9,
    "☒": 9,
    "ƍ": 5,
    "ƺ": 5,
    "Ȿ": 5,
    "ȿ": 5,
    "Ɀ": 5,
    "ɀ": 5,
    "ᶀ": 5,
    "Ꞔ": 5,
    "ꞔ": 5,
    "ᶁ": 6,
    "ᶂ": 4,
    "ᶃ": 6,
    "ꞕ": 6,
    "ᶄ": 5,
    "ᶅ": 2,
    "ᶆ": 6,
    "ᶇ": 6,
    "ᶈ": 5,
    "ᶉ": 5,
    "ᶊ": 5,
    "ᶋ": 5,
    "ᶌ": 5,
    "ᶍ": 6,
    "Ᶎ": 6,
    "ᶎ": 6,
    "ᶏ": 6,
    "ᶐ": 6,
    "ᶒ": 6,
    "ᶓ": 6,
    "ᶔ": 5,
    "ᶕ": 6,
    "ᶖ": 2,
    "ᶗ": 6,
    "ᶘ": 5,
    "ᶙ": 6,
    "ᶚ": 5,
    "ẚ": 5,
    "⅒": 9,
    "⅘": 9,
    "₨": 9,
    "₯": 9,
    "¡": 1,
    "‰": 7,
    "­": 3,
    "·": 1,
    "₴": 7,
    "≠": 5,
    "¿": 5,
    "×": 5,
    "Ø": 5,
    "Þ": 5,
    "һ": 5,
    "ð": 5,
    "ø": 5,
    "þ": 5,
    "Α": 5,
    "Β": 5,
    "Γ": 5,
    "Δ": 5,
    "Ε": 5,
    "Ζ": 5,
    "Η": 5,
    "Θ": 5,
    "Ι": 3,
    "Κ": 5,
    "Λ": 5,
    "Μ": 5,
    "Ν": 5,
    "Ξ": 5,
    "Ο": 5,
    "Π": 5,
    "Ρ": 5,
    "Σ": 5,
    "Τ": 5,
    "Υ": 5,
    "Φ": 5,
    "Χ": 5,
    "Ψ": 5,
    "Ω": 5,
    "α": 5,
    "β": 5,
    "γ": 5,
    "δ": 5,
    "ε": 5,
    "ζ": 5,
    "η": 5,
    "θ": 5,
    "ι": 2,
    "κ": 4,
    "λ": 5,
    "μ": 5,
    "ν": 5,
    "ξ": 5,
    "ο": 5,
    "π": 5,
    "ρ": 5,
    "ς": 5,
    "σ": 6,
    "τ": 5,
    "υ": 5,
    "φ": 5,
    "χ": 5,
    "ψ": 5,
    "ω": 7,
    "Ђ": 7,
    "Ѕ": 5,
    "І": 3,
    "Ј": 5,
    "Љ": 7,
    "Њ": 6,
    "Ћ": 6,
    "А": 5,
    "Б": 5,
    "В": 5,
    "Г": 5,
    "Д": 6,
    "Е": 5,
    "Ж": 7,
    "З": 5,
    "И": 5,
    "К": 5,
    "Л": 5,
    "М": 5,
    "Н": 5,
    "О": 5,
    "П": 5,
    "Р": 5,
    "С": 5,
    "Т": 5,
    "У": 5,
    "Ф": 7,
    "Х": 5,
    "Ц": 6,
    "Ч": 5,
    "Ш": 7,
    "Щ": 8,
    "Ъ": 6,
    "Ы": 7,
    "Ь": 5,
    "Э": 5,
    "Ю": 7,
    "Я": 5,
    "а": 5,
    "б": 5,
    "в": 5,
    "г": 4,
    "д": 6,
    "е": 5,
    "ж": 5,
    "з": 5,
    "и": 5,
    "к": 4,
    "л": 5,
    "м": 5,
    "н": 5,
    "о": 5,
    "п": 5,
    "р": 5,
    "с": 5,
    "т": 5,
    "у": 5,
    "ф": 5,
    "х": 5,
    "ц": 5,
    "ч": 5,
    "ш": 5,
    "щ": 6,
    "ъ": 6,
    "ы": 6,
    "ь": 5,
    "э": 5,
    "ю": 7,
    "я": 5,
    "є": 5,
    "ѕ": 5,
    "і": 1,
    "ј": 5,
    "љ": 7,
    "њ": 6,
    "–": 6,
    "—": 8,
    "‘": 2,
    "’": 2,
    "“": 4,
    "”": 4,
    "„": 4,
    "…": 7,
    "⁊": 4,
    "←": 7,
    "↑": 5,
    "→": 7,
    "↓": 5,
    "⇄": 7,
    "＋": 5,
    "Ə": 5,
    "ə": 5,
    "ɛ": 5,
    "ɪ": 3,
    "Ү": 5,
    "ү": 5,
    "Ө": 5,
    "ө": 5,
    "ʻ": 1,
    "ˌ": 1,
    ";": 1,
    "ĸ": 4,
    "ẞ": 5,
    "ß": 5,
    "₽": 6,
    "€": 6,
    "Ѣ": 6,
    "ѣ": 6,
    "Ѵ": 6,
    "ѵ": 6,
    "Ӏ": 3,
    "Ѳ": 5,
    "ѳ": 5,
    "⁰": 4,
    "¹": 3,
    "³": 4,
    "⁴": 4,
    "⁵": 4,
    "⁶": 4,
    "⁷": 4,
    "⁸": 4,
    "⁹": 4,
    "⁺": 3,
    "⁻": 3,
    "⁼": 3,
    "⁽": 2,
    "⁾": 2,
    "ⁱ": 1,
    "™": 8,
    "ʔ": 5,
    "ʕ": 5,
    "⧈": 7,
    "⚔": 7,
    "☠": 7,
    "Қ": 6,
    "қ": 5,
    "Ғ": 6,
    "ғ": 5,
    "Ұ": 5,
    "ұ": 5,
    "Ә": 5,
    "ә": 5,
    "Җ": 8,
    "җ": 6,
    "Ң": 6,
    "ң": 6,
    "Һ": 5,
    "א": 5,
    "ב": 5,
    "ג": 4,
    "ד": 5,
    "ה": 5,
    "ו": 1,
    "ז": 3,
    "ח": 5,
    "ט": 5,
    "י": 1,
    "כ": 5,
    "ל": 5,
    "מ": 5,
    "ם": 5,
    "נ": 3,
    "ן": 1,
    "ס": 5,
    "ע": 5,
    "פ": 5,
    "ף": 5,
    "צ": 5,
    "ץ": 5,
    "ק": 5,
    "ר": 5,
    "¢": 5,
    "¤": 7,
    "¥": 5,
    "©": 7,
    "®": 7,
    "µ": 5,
    "¶": 6,
    "¼": 7,
    "½": 7,
    "¾": 7,
    "·": 1,
    "‐": 3,
    "‚": 2,
    "†": 5,
    "‡": 5,
    "•": 2,
    "‱": 8,
    "′": 2,
    "″": 4,
    "‴": 6,
    "‵": 2,
    "‶": 4,
    "‷": 6,
    "‹": 3,
    "›": 3,
    "※": 7,
    "‼": 3,
    "‽": 5,
    "⁂": 7,
    "⁈": 7,
    "⁉": 7,
    "⁋": 6,
    "⁎": 3,
    "⁏": 1,
    "⁑": 3,
    "⁒": 3,
    "⁗": 8,
    "℗": 7,
    "−": 5,
    "∓": 5,
    "∞": 7,
    "☀": 8,
    "☁": 8,
    "☈": 7,
    "Є": 5,
    "☲": 5,
    "☵": 5,
    "☽": 8,
    "♀": 3,
    "♂": 5,
    "⚥": 5,
    "♠": 5,
    "♣": 5,
    "♥": 5,
    "♦": 5,
    "♩": 3,
    "♪": 5,
    "♫": 7,
    "♬": 7,
    "♭": 3,
    "♮": 3,
    "♯": 5,
    "⚀": 7,
    "⚁": 7,
    "⚂": 7,
    "⚃": 7,
    "⚄": 7,
    "⚅": 7,
    "ʬ": 5,
    "⚡": 5,
    "⛏": 8,
    "✔": 6,
    "❄": 7,
    "❌": 6,
    "❤": 7,
    "⭐": 7,
    "⸘": 5,
    "⸮": 5,
    "⸵": 1,
    "⸸": 5,
    "⹁": 1,
    "⹋": 5,
    "⥝": 5,
    "ᘔ": 5,
    "Ɛ": 5,
    "߈": 5,
    "ϛ": 5,
    "ㄥ": 5,
    "Ɐ": 5,
    "ᗺ": 5,
    "Ɔ": 5,
    "ᗡ": 5,
    "Ǝ": 5,
    "Ⅎ": 5,
    "⅁": 5,
    "Ʞ": 5,
    "Ꞁ": 5,
    "Ԁ": 5,
    "Ꝺ": 5,
    "ᴚ": 5,
    "⟘": 5,
    "∩": 5,
    "Ʌ": 5,
    "⅄": 5,
    "ɐ": 5,
    "ɔ": 5,
    "ǝ": 5,
    "ɟ": 4,
    "ᵷ": 5,
    "ɥ": 5,
    "ᴉ": 1,
    "ɾ": 5,
    "ʞ": 4,
    "ꞁ": 2,
    "ɯ": 5,
    "ɹ": 5,
    "ʇ": 3,
    "ʌ": 5,
    "ʍ": 5,
    "ʎ": 5,
    "Ա": 5,
    "Բ": 5,
    "Գ": 6,
    "Դ": 6,
    "Զ": 5,
    "Է": 5,
    "Թ": 6,
    "Ժ": 6,
    "Ի": 5,
    "Լ": 4,
    "Խ": 6,
    "Ծ": 5,
    "Կ": 5,
    "Հ": 5,
    "Ձ": 5,
    "Ղ": 6,
    "Ճ": 5,
    "Մ": 6,
    "Յ": 5,
    "Ն": 5,
    "Շ": 5,
    "Ո": 5,
    "Չ": 5,
    "Ջ": 5,
    "Ռ": 6,
    "Ս": 5,
    "Վ": 5,
    "Տ": 5,
    "Ր": 5,
    "Ց": 5,
    "Ւ": 4,
    "Փ": 5,
    "Ք": 5,
    "Օ": 5,
    "Ֆ": 5,
    "ՙ": 2,
    "ա": 5,
    "բ": 5,
    "գ": 6,
    "դ": 6,
    "ե": 5,
    "զ": 6,
    "է": 4,
    "ը": 5,
    "թ": 5,
    "ժ": 6,
    "ի": 5,
    "լ": 2,
    "խ": 6,
    "ծ": 5,
    "կ": 5,
    "հ": 5,
    "ձ": 5,
    "ղ": 6,
    "ճ": 5,
    "մ": 6,
    "յ": 5,
    "ն": 6,
    "շ": 5,
    "ո": 5,
    "չ": 5,
    "պ": 5,
    "ջ": 5,
    "ռ": 5,
    "ս": 5,
    "վ": 6,
    "տ": 7,
    "ր": 5,
    "ց": 5,
    "ւ": 4,
    "փ": 7,
    "ք": 6,
    "օ": 5,
    "ֆ": 5,
    "և": 6,
    "ש": 5,
    "ת": 5,
    "Ը": 5,
    "՚": 2,
    "՛": 2,
    "՜": 3,
    "՝": 2,
    "՞": 3,
    "՟": 5,
    "ՠ": 5,
    "ֈ": 6,
    "֏": 5,
    "¯": 5,
    "ſ": 3,
    "Ʒ": 5,
    "ʒ": 5,
    "Ƿ": 5,
    "ƿ": 5,
    "Ȝ": 5,
    "ȝ": 5,
    "Ȥ": 5,
    "ȥ": 5,
    "˙": 1,
    "Ꝛ": 5,
    "ꝛ": 4,
    "‑": 3,
    "⅋": 5,
    "⏏": 5,
    "⏩": 6,
    "⏪": 6,
    "⏭": 7,
    "⏮": 7,
    "⏯": 6,
    "⏴": 3,
    "⏵": 3,
    "⏶": 5,
    "⏷": 5,
    "⏸": 3,
    "⏹": 5,
    "⏺": 5,
    "⏻": 7,
    "⏼": 7,
    "⏽": 1,
    "⭘": 7,
    "▲": 5,
    "▶": 6,
    "▼": 5,
    "◀": 6,
    "●": 4,
    "◦": 3,
    "◘": 3,
    "⚓": 7,
    "⛨": 7,
    "Ĳ": 5,
    "ĳ": 4,
    "ǉ": 7,
    "Ꜩ": 7,
    "ꜩ": 6,
    "ꜹ": 8,
    "ꜻ": 8,
    "ﬀ": 7,
    "ﬁ": 5,
    "ﬂ": 6,
    "ﬃ": 8,
    "ﬅ": 5,
    "�": 7,
    "Ե": 5,
    "Պ": 5,
    "ᚠ": 4,
    "ᚢ": 5,
    "ᚣ": 5,
    "ᚤ": 5,
    "ᚥ": 5,
    "ᚦ": 4,
    "ᚧ": 4,
    "ᚨ": 3,
    "ᚩ": 4,
    "ᚪ": 4,
    "ᚫ": 4,
    "ᚬ": 5,
    "ᚭ": 3,
    "ᚮ": 3,
    "ᚯ": 5,
    "ᚰ": 5,
    "ᚱ": 4,
    "ᚲ": 3,
    "ᚳ": 4,
    "ᚴ": 4,
    "ᚶ": 5,
    "ᚷ": 5,
    "ᚸ": 5,
    "ᚹ": 4,
    "ᚺ": 5,
    "ᚻ": 5,
    "ᚼ": 5,
    "ᚽ": 3,
    "ᚾ": 5,
    "ᚿ": 3,
    "ᛀ": 5,
    "ᛁ": 1,
    "ᛂ": 3,
    "ᛃ": 6,
    "ᛄ": 5,
    "ᛅ": 5,
    "ᛆ": 3,
    "ᛇ": 5,
    "ᛈ": 4,
    "ᛉ": 5,
    "ᛊ": 3,
    "ᛋ": 5,
    "ᛌ": 1,
    "ᛍ": 3,
    "ᛎ": 5,
    "ᛏ": 5,
    "ᛐ": 3,
    "ᛑ": 4,
    "ᛒ": 4,
    "ᛓ": 3,
    "ᛔ": 4,
    "ᛕ": 4,
    "ᛖ": 5,
    "ᛗ": 5,
    "ᛘ": 5,
    "ᛙ": 3,
    "ᛚ": 3,
    "ᛛ": 4,
    "ᛜ": 5,
    "ᛝ": 5,
    "ᛞ": 5,
    "ᛟ": 6,
    "ᛠ": 7,
    "ᛡ": 5,
    "ᛢ": 7,
    "ᛣ": 5,
    "ᛤ": 5,
    "ᛥ": 5,
    "ᛦ": 5,
    "ᛧ": 1,
    "ᛨ": 5,
    "ᛩ": 4,
    "ᛪ": 7,
    "᛫": 2,
    "᛬": 1,
    "᛭": 5,
    "ᛮ": 5,
    "ᛯ": 5,
    "ᛰ": 5,
    "ᛱ": 5,
    "ᛲ": 5,
    "ᛳ": 7,
    "ᛴ": 4,
    "ᛵ": 2,
    "ᛶ": 5,
    "ᛷ": 5,
    "ᛸ": 5,
    "☺": 5,
    "☻": 7,
    "¦": 1,
    "☹": 5,
    "ך": 5,
    "׳": 2,
    "״": 4,
    "װ": 3,
    "ױ": 3,
    "ײ": 3,
    "־": 5,
    "׃": 1,
    "׆": 3,
    "´": 2,
    "¨": 3,
    "ᴀ": 5,
    "ʙ": 5,
    "ᴄ": 5,
    "ᴅ": 5,
    "ᴇ": 5,
    "ꜰ": 5,
    "ɢ": 5,
    "ʜ": 5,
    "ᴊ": 5,
    "ᴋ": 5,
    "ʟ": 5,
    "ᴍ": 5,
    "ɴ": 5,
    "ᴏ": 5,
    "ᴘ": 5,
    "ꞯ": 5,
    "ʀ": 5,
    "ꜱ": 5,
    "ᴛ": 5,
    "ᴜ": 5,
    "ᴠ": 5,
    "ᴡ": 5,
    "ʏ": 5,
    "ᴢ": 5,
    "§": 5,
    "ɱ": 5,
    "ɳ": 6,
    "ɲ": 6,
    "ʈ": 3,
    "ɖ": 6,
    "ɡ": 5,
    "ʡ": 5,
    "ɕ": 5,
    "ʑ": 5,
    "ɸ": 5,
    "ʝ": 5,
    "ʢ": 5,
    "ɻ": 6,
    "ʁ": 5,
    "ɦ": 5,
    "ʋ": 5,
    "ɰ": 5,
    "ɬ": 4,
    "ɮ": 5,
    "ʘ": 5,
    "ǀ": 1,
    "ǃ": 1,
    "ǂ": 5,
    "ǁ": 3,
    "ɓ": 5,
    "ɗ": 6,
    "ᶑ": 6,
    "ʄ": 6,
    "ɠ": 6,
    "ʛ": 6,
    "ɧ": 5,
    "ɫ": 5,
    "ɨ": 3,
    "ʉ": 7,
    "ʊ": 5,
    "ɘ": 5,
    "ɵ": 5,
    "ɤ": 5,
    "ɜ": 5,
    "ɞ": 5,
    "ɑ": 5,
    "ɒ": 5,
    "ɚ": 7,
    "ɝ": 7,
    "Ɓ": 7,
    "Ɖ": 6,
    "Ƒ": 6,
    "Ʃ": 5,
    "Ʋ": 5,
    "Ⴀ": 5,
    "Ⴁ": 7,
    "Ⴂ": 7,
    "Ⴃ": 5,
    "Ⴄ": 5,
    "Ⴅ": 7,
    "Ⴆ": 7,
    "Ⴇ": 7,
    "Ⴈ": 5,
    "Ⴉ": 5,
    "Ⴊ": 7,
    "Ⴋ": 6,
    "Ⴌ": 5,
    "Ⴍ": 7,
    "Ⴎ": 7,
    "Ⴏ": 6,
    "Ⴐ": 7,
    "Ⴑ": 5,
    "Ⴒ": 5,
    "Ⴓ": 7,
    "Ⴔ": 5,
    "Ⴕ": 5,
    "Ⴖ": 5,
    "Ⴗ": 5,
    "Ⴘ": 5,
    "Ⴙ": 5,
    "Ⴚ": 5,
    "Ⴛ": 7,
    "Ⴜ": 5,
    "Ⴝ": 5,
    "Ⴞ": 5,
    "Ⴟ": 5,
    "Ⴠ": 7,
    "Ⴡ": 5,
    "Ⴢ": 5,
    "Ⴣ": 5,
    "Ⴤ": 5,
    "Ⴥ": 7,
    "Ⴧ": 5,
    "Ⴭ": 5,
    "ა": 5,
    "ბ": 5,
    "გ": 5,
    "დ": 5,
    "ე": 5,
    "ვ": 5,
    "ზ": 5,
    "თ": 5,
    "ი": 5,
    "კ": 5,
    "ლ": 7,
    "მ": 5,
    "ნ": 5,
    "ო": 5,
    "პ": 5,
    "ჟ": 5,
    "რ": 5,
    "ს": 5,
    "ტ": 5,
    "უ": 5,
    "ფ": 5,
    "ქ": 5,
    "ღ": 5,
    "ყ": 5,
    "შ": 5,
    "ჩ": 5,
    "ც": 5,
    "ძ": 5,
    "წ": 5,
    "ჭ": 5,
    "ხ": 5,
    "ჯ": 4,
    "ჰ": 5,
    "ჱ": 6,
    "ჲ": 5,
    "ჳ": 5,
    "ჴ": 5,
    "ჵ": 5,
    "ჶ": 5,
    "ჷ": 5,
    "ჸ": 5,
    "ჹ": 5,
    "ჺ": 5,
    "჻": 3,
    "ჼ": 3,
    "ჽ": 5,
    "ჾ": 5,
    "ჿ": 5,
    "תּ": 5,
    "שׂ": 5,
    "פֿ": 5,
    "פּ": 5,
    "כּ": 4,
    "ײַ": 3,
    "יִ": 1,
    "וֹ": 2,
    "וּ": 3,
    "בֿ": 5,
    "בּ": 5,
    "ꜧ": 5,
    "Ꜧ": 5,
    "ɺ": 5,
    "ⱱ": 7,
    "ʠ": 6,
    "ʗ": 5,
    "ʖ": 5,
    "ɭ": 2,
    "ɷ": 7,
    "ɿ": 5,
    "ʅ": 5,
    "ʆ": 6,
    "ʓ": 5,
    "ʚ": 5,
    "₪": 7,
    "₾": 6,
    "֊": 5,
    "ⴀ": 5,
    "ⴁ": 6,
    "ⴂ": 6,
    "ⴃ": 5,
    "ⴄ": 5,
    "ⴅ": 5,
    "ⴆ": 6,
    "ⴡ": 5,
    "ⴇ": 5,
    "ⴈ": 5,
    "ⴉ": 5,
    "ⴊ": 5,
    "ⴋ": 5,
    "ⴌ": 5,
    "ⴢ": 5,
    "ⴍ": 5,
    "ⴎ": 6,
    "ⴏ": 6,
    "ⴐ": 5,
    "ⴑ": 5,
    "ⴒ": 5,
    "ⴣ": 5,
    "ⴓ": 5,
    "ⴔ": 5,
    "ⴕ": 5,
    "ⴖ": 5,
    "ⴗ": 5,
    "ⴘ": 5,
    "ⴙ": 5,
    "ⴚ": 5,
    "ⴛ": 5,
    "ⴜ": 5,
    "ⴝ": 6,
    "ⴞ": 5,
    "ⴤ": 5,
    "ⴟ": 5,
    "ⴠ": 5,
    "ⴥ": 5,
    "⅛": 8,
    "⅜": 8,
    "⅝": 8,
    "⅞": 8,
    "⅓": 8,
    "⅔": 8,
    "✉": 7,
    "☂": 7,
    "☔": 7,
    "☄": 7,
    "⛄": 6,
    "☃": 7,
    "⌛": 7,
    "⌚": 7,
    "⚐": 7,
    "✎": 7,
    "❣": 5,
    "♤": 5,
    "♧": 5,
    "♡": 5,
    "♢": 5,
    "⛈": 8,
    "☰": 5,
    "☱": 5,
    "☳": 5,
    "☴": 5,
    "☶": 5,
    "☷": 5,
    "↔": 8,
    "⇒": 8,
    "⇏": 8,
    "⇔": 8,
    "⇵": 6,
    "∀": 7,
    "∃": 5,
    "∄": 5,
    "∉": 5,
    "∋": 5,
    "∌": 5,
    "⊂": 5,
    "⊃": 5,
    "⊄": 5,
    "⊅": 5,
    "∧": 5,
    "∨": 5,
    "⊻": 5,
    "⊼": 5,
    "⊽": 5,
    "∥": 3,
    "≢": 6,
    "⋆": 3,
    "∑": 5,
    "⊤": 5,
    "⊥": 5,
    "⊢": 5,
    "⊨": 5,
    "≔": 7,
    "∁": 4,
    "∴": 5,
    "∵": 5,
    "∛": 7,
    "∜": 7,
    "∂": 5,
    "⋃": 5,
    "⊆": 5,
    "⊇": 5,
    "□": 5,
    "△": 5,
    "▷": 6,
    "▽": 5,
    "◁": 6,
    "◆": 5,
    "◇": 5,
    "○": 5,
    "◎": 7,
    "☆": 7,
    "★": 7,
    "✘": 6,
    "₀": 4,
    "₁": 3,
    "₂": 4,
    "₃": 4,
    "₄": 4,
    "₅": 4,
    "₆": 4,
    "₇": 4,
    "₈": 4,
    "₉": 4,
    "₊": 3,
    "₋": 3,
    "₌": 3,
    "₍": 2,
    "₎": 2,
    "∫": 5,
    "∮": 5,
    "∝": 6,
    "⌀": 7,
    "⌂": 7,
    "⌘": 7,
    "〒": 5,
    "ɼ": 5,
    "Ƅ": 6,
    "ƅ": 6,
    "ẟ": 5,
    "Ƚ": 6,
    "ƚ": 3,
    "ƛ": 5,
    "Ƞ": 5,
    "ƞ": 5,
    "Ɵ": 5,
    "Ƨ": 5,
    "ƨ": 5,
    "ƪ": 5,
    "Ƹ": 5,
    "ƹ": 5,
    "ƻ": 5,
    "Ƽ": 5,
    "ƽ": 5,
    "ƾ": 5,
    "ȡ": 7,
    "ȴ": 3,
    "ȵ": 7,
    "ȶ": 4,
    "Ⱥ": 5,
    "ⱥ": 6,
    "Ȼ": 5,
    "ȼ": 5,
    "Ɇ": 5,
    "ɇ": 6,
    "Ⱦ": 5,
    "ⱦ": 5,
    "Ɂ": 5,
    "ɂ": 5,
    "Ƀ": 6,
    "Ʉ": 7,
    "Ɉ": 6,
    "ɉ": 6,
    "Ɋ": 6,
    "ɋ": 6,
    "Ɍ": 6,
    "ɍ": 6,
    "Ɏ": 7,
    "ɏ": 7,
    "ẜ": 4,
    "ẝ": 4,
    "Ỽ": 5,
    "ỽ": 4,
    "Ỿ": 5,
    "ỿ": 6,
    "Ꞩ": 6,
    "ꞩ": 5,
    "𐌰": 5,
    "𐌱": 5,
    "𐌲": 5,
    "𐌳": 5,
    "𐌴": 5,
    "𐌵": 5,
    "𐌶": 5,
    "𐌷": 5,
    "𐌸": 5,
    "𐌹": 1,
    "𐌺": 5,
    "𐌻": 5,
    "𐌼": 5,
    "𐌽": 5,
    "𐌾": 5,
    "𐌿": 5,
    "𐍀": 5,
    "𐍁": 5,
    "𐍂": 5,
    "𐍃": 5,
    "𐍄": 5,
    "𐍅": 5,
    "𐍆": 5,
    "𐍇": 5,
    "𐍈": 5,
    "𐍉": 5,
    "𐍊": 5,
    "🌧": 8,
    "🔥": 6,
    "🌊": 8,
    "⅐": 8,
    "⅑": 8,
    "⅕": 8,
    "⅖": 8,
    "⅗": 8,
    "⅙": 7,
    "⅚": 7,
    "⅟": 6,
    "↉": 8,
    "🗡": 8,
    "🏹": 8,
    "🪓": 6,
    "🔱": 8,
    "🎣": 8,
    "🧪": 7,
    "⚗": 7,
    "⯪": 7,
    "⯫": 7,
    "Ɑ": 5,
    "🛡": 7,
    "✂": 7,
    "🍖": 8,
    "🪣": 7,
    "🔔": 7,
    "⏳": 7,
    "⚑": 7,
    "₠": 5,
    "₡": 5,
    "₢": 5,
    "₣": 6,
    "₤": 5,
    "₥": 5,
    "₦": 7,
    "₩": 7,
    "₫": 6,
    "₭": 6,
    "₮": 5,
    "₰": 5,
    "₱": 7,
    "₲": 5,
    "₳": 7,
    "₵": 5,
    "₶": 5,
    "₷": 7,
    "₸": 5,
    "₹": 5,
    "₺": 6,
    "₻": 7,
    "₼": 5,
    "₿": 5,
}
_BOOK_PIXELS_PER_LINE: int = 114
_BOOK_LINES_PER_PAGE: int = 14


# ==================================================================================================
# SNBT generation utilities
# ==================================================================================================


def signData(
    frontLine1: str = "",
    frontLine2: str = "",
    frontLine3: str = "",
    frontLine4: str = "",
    frontColor: str = "",
    frontIsGlowing: bool = False,
    backLine1: str = "",
    backLine2: str = "",
    backLine3: str = "",
    backLine4: str = "",
    backColor: str = "",
    backIsGlowing: bool = False,
    isWaxed: bool = False
) -> str:
    """Returns an SNBT string with sign data.\n
    See also: :func:`.signBlock`, :func:`.editor_tools.placeSign`."""

    def sideCompound(line1: str, line2: str, line3: str, line4: str, color: str, isGlowing: bool):
        fields: List[str] = []
        fields.append(f'messages: [{",".join(repr(json.dumps({"text": line})) for line in [line1, line2, line3, line4])}]')
        if color:
            fields.append(f'Color: {repr(color)}')
        if isGlowing:
            fields.append('GlowingText: 1b')
        return "{" + ",".join(fields) + "}"

    fields: List[str] = []
    fields.append(f"front_text: {sideCompound(frontLine1, frontLine2, frontLine3, frontLine4, frontColor, frontIsGlowing)}")
    fields.append( f"back_text: {sideCompound(backLine1,  backLine2,  backLine3,  backLine4,  backColor,  backIsGlowing)}")
    if isWaxed:
        fields.append("is_waxed: 1b")
    return "{" + ",".join(fields) + "}"


def lecternData(bookData: Optional[str], page: int = 0) -> str:
    """Returns an SNBT string with lectern data.\n
    ``bookData`` should be an SNBT string defining a book.
    You can use :func:`.bookData` to create such a string.\n
    See also: :func:`.lecternBlock`, :func:`.editor_tools.placeLectern`."""
    if bookData is None:
        return ""
    return f'{{Book: {{id: "minecraft:written_book", Count: 1b, components: {bookData}, Page: {page}}}}}'


def bookData(
    text: str,
    title: str                = "Chronicle",
    author: str               = "Anonymous",
    description: str          = "I wonder what's inside?",
    desccolor: str            = "gold",
    descIsItalic: bool        = True,
) -> str:
    r"""Returns an SNBT string with written book data

    The following `special formatting tokens<https://minecraft.wiki/w/Formatting_codes>`_
    can be used to add markup to the text:
    - ``§0``: Black text
    - ``§1``: Dark blue text
    - ``§2``: Dark green text
    - ``§3``: Dark aqua text
    - ``§4``: Dark red text
    - ``§5``: Dark purple text
    - ``§6``: Gold text
    - ``§7``: Gray text
    - ``§8``: Dark gray text
    - ``§9``: Blue text
    - ``§a``: Green text
    - ``§b``: Aqua text
    - ``§c``: Red text
    - ``§d``: Light purple text
    - ``§e``: Yellow text
    - ``§f``: White text
    - ``§k``: Obfuscated text
    - ``§l``: **Bold** text
    - ``§m``: ~~Strikethrough~~ text
    - ``§n``: __Underline__ text
    - ``§o``: *Italic* text
    - ``§r``: Reset text formatting

    Additionally, you can use ``\n`` to force a line break and ``\f`` to force a page break.

    NOTE: For supported special characters see
    https://minecraft.wiki/Language#Font

    Algorithm adapted from `Gutencraft <https://github.com/NightlyNexus/Gutencraft/blob/d04d696d8adf955d035dc393711cfdb4c508efe1/gutencraft/src/commonMain/kotlin/Gutencraft.kt>`_
    """
    pages: List[str] = []

    text = text.strip()

    cursor = 0
    pageStartIndex = 0
    lineNumber = 1
    lineColumnCount = 0
    wordColumnCount = 0
    wordStartIndex = 0
    lastWordEndIndex = 0
    isCursorInsideWord = True

    @lru_cache
    def getCharacterWidth(c: str) -> int:
        if c is None:
            return 0
        try:
            return _CHARACTER_WIDTHS[c] + 1
        except KeyError:
            codePoint = ord(c)
            # Use width of 9 for all CJK characters
            if (
                    (0x3300 <= codePoint <= 0x33FF) or
                    (0xFE30 <= codePoint <= 0xFE4F) or
                    (0xF900 <= codePoint <= 0xFAFF) or
                    (0x3040 <= codePoint <= 0x309F) or
                    (0x30A0 <= codePoint <= 0x30FF) or
                    (0x2E80 <= codePoint <= 0x2EFF) or
                    (0x4E00 <= codePoint <= 0x9FFF) or
                    (0x3400 <= codePoint <= 0x4DBF)
            ):
                return 9
            return 10

    def appendFullPage():
        nonlocal cursor
        nonlocal pageStartIndex
        nonlocal lineNumber
        nonlocal wordStartIndex
        nonlocal lastWordEndIndex
        cursor = cursor + 1
        if lineNumber == _BOOK_LINES_PER_PAGE:
            _page = text[pageStartIndex:lastWordEndIndex]
            if len(_page) > 0:
                pages.append(_page)
            lineNumber = 1
            pageStartIndex = cursor
            wordStartIndex = cursor
            lastWordEndIndex = cursor
        else:
            lineNumber = lineNumber + 1

    while True:
        if cursor == len(text):
            if isCursorInsideWord:
                page = text[pageStartIndex:]
            else:
                page = text[wordStartIndex:lastWordEndIndex]
            if len(page) > 0:
                pages.append(page)
            break

        # Skip cursor past formatting tokens.
        markupToken = re.match(r'^§[a-z0-9]', text[cursor:])
        if markupToken is not None:
            cursor = cursor + len(markupToken[0])
            continue

        char = text[cursor]

        if char == ' ':
            if isCursorInsideWord:
                isCursorInsideWord = False
                lastWordEndIndex = cursor
            nextLineColumnCount = lineColumnCount + getCharacterWidth(char)
            if nextLineColumnCount > _BOOK_PIXELS_PER_LINE:
                lineColumnCount = 0
                appendFullPage()
            else:
                lineColumnCount = nextLineColumnCount
                cursor = cursor + 1
            wordColumnCount = 0
            continue

        if char == '\f':
            cursor = cursor + 1
            text = text[:cursor - 1] + ('\n' * (_BOOK_PIXELS_PER_LINE - lineNumber)) + text[cursor:]
            continue

        if char == '\n':
            if pageStartIndex == cursor:
                cursor = cursor + 1
                pageStartIndex = cursor
                lastWordEndIndex = cursor
                wordStartIndex = cursor
                continue
            if isCursorInsideWord:
                isCursorInsideWord = False
                lastWordEndIndex = cursor
            appendFullPage()
            lineColumnCount = 0
            wordColumnCount = 0
            continue

        if not isCursorInsideWord:
            isCursorInsideWord = True
            wordStartIndex = cursor

        columnCount = getCharacterWidth(char)
        nextWordColumnCount = wordColumnCount + columnCount
        if nextWordColumnCount > _BOOK_PIXELS_PER_LINE:
            lastWordEndIndex = cursor
            if lineNumber == _BOOK_LINES_PER_PAGE:
                page = text[pageStartIndex:cursor]
                pages.append(page)
                lineNumber = 1
                pageStartIndex = cursor
                lastWordEndIndex = cursor
                wordStartIndex = cursor
            else:
                lineNumber = lineNumber + 1
            lineColumnCount = columnCount
            wordColumnCount = columnCount
            cursor = cursor + 1
            continue

        wordColumnCount = nextWordColumnCount
        nextLineColumnCount = lineColumnCount + columnCount
        if nextLineColumnCount > _BOOK_PIXELS_PER_LINE:
            if lineNumber == _BOOK_LINES_PER_PAGE:
                page = text[pageStartIndex:lastWordEndIndex]
                if len(page) > 0:
                    pages.append(page)
                lineNumber = 1
                pageStartIndex = wordStartIndex
                lastWordEndIndex = wordStartIndex
            else:
                lineNumber = lineNumber + 1
            lineColumnCount = wordColumnCount
        else:
            lineColumnCount = nextLineColumnCount
        cursor = cursor + 1

    loreJSON = json.dumps({'text': description, 'color': desccolor, 'italic': descIsItalic})
    pageJSON = [json.dumps({'text': p}) for p in pages]
    book = (
        "{"
            "\"minecraft:written_book_content\": {"
                f'title: {repr(title)}, '
                f'author: {repr(author)}, '
                f'pages: [{",".join(repr(p) for p in pageJSON)}]'
            "},"
            f'"lore": [{repr(loreJSON)}]'
        "}"
    )
    return book


# ==================================================================================================
# Block generating utilities
# ==================================================================================================


def signBlock(
    wood: str = "oak",
    wall: bool = False,
    facing: str = "north",
    rotation: Union[str,int] = "0",
    frontLine1: str = "",
    frontLine2: str = "",
    frontLine3: str = "",
    frontLine4: str = "",
    frontColor: str = "",
    frontIsGlowing: bool = False,
    backLine1: str = "",
    backLine2: str = "",
    backLine3: str = "",
    backLine4: str = "",
    backColor: str = "",
    backIsGlowing: bool = False,
    isWaxed: bool = False
) -> Block:
    """Returns a sign Block with the specified properties.\n
    If ``wall`` is True, ``facing`` is used. Otherwise, ``rotation`` is used.
    See also: :func:`.signData`, :func:`.editor_tools.placeSign`."""
    blockId = f"minecraft:{wood}_{'wall_' if wall else ''}sign"
    states = {"facing": facing} if wall else {"rotation": str(rotation)}
    return Block(
        blockId, states,
        data=signData(
            frontLine1, frontLine2, frontLine3, frontLine4, frontColor, frontIsGlowing,
            backLine1, backLine2, backLine3, backLine4, backColor, backIsGlowing,
            isWaxed
        )
    )


def lecternBlock(facing: str = "north", bookData: Optional[str] = None, page: int = 0) -> Block:
    """Returns a lectern Block with the specified properties.\n
    ``bookData`` should be an SNBT string defining a book.
    You can use :func:`.bookData` to create such a string.\n
    See also: :func:`.lecternData`, :func:`.editor_tools.placeLectern`."""
    return Block(
        "minecraft:lectern",
        {"facing": facing, "has_book": ("false" if bookData is None else "true")},
        data=lecternData(bookData, page)
    )


# ==================================================================================================
# Misc. utilities
# ==================================================================================================


def positionToInventoryIndex(position: Vec2iLike, inventorySize: Vec2iLike) -> int:
    """Returns the flat index of the slot at ``position`` in an inventory of size ``inventorySize``."""
    if not Rect(size=inventorySize).contains(position):
        raise ValueError(f"{position} is not between (0, 0) and {tuple(inventorySize)}!")
    return position[0] + position[1] * inventorySize[0]


@deprecated("Deprecated along with lookup.py. See the documentation for the lookup.py module for the reasons and for alternatives.")
def getObtrusiveness(block: Block) -> int:
    """
    .. warning::
        :title: Deprecated

        Deprecated along with :mod:`.lookup`. See the warning at the top of
        the `lookup` page for the reasons and for alternatives.

    Returns the percieved obtrusiveness of the given ``block``.

    Returns a numeric weight from 0 (invisible) to 4 (opaque).
    """
    from . import lookup # pylint: disable=import-outside-toplevel
    if not block.id:
        return 0
    if block.id in lookup.INVISIBLE:
        return 0
    if block.id in lookup.FILTERING:
        return 1
    if block.id in lookup.UNOBTRUSIVE:
        return 2
    if block.id in lookup.OBTRUSIVE:
        return 3
    return 4
